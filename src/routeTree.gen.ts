/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootLayoutImport } from './routes/_root-layout'

// Create Virtual Routes

const RootLayoutIndexLazyImport = createFileRoute('/_root-layout/')()

// Create/Update Routes

const RootLayoutRoute = RootLayoutImport.update({
  id: '/_root-layout',
  getParentRoute: () => rootRoute,
} as any)

const RootLayoutIndexLazyRoute = RootLayoutIndexLazyImport.update({
  path: '/',
  getParentRoute: () => RootLayoutRoute,
} as any).lazy(() =>
  import('./routes/_root-layout/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_root-layout': {
      id: '/_root-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RootLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_root-layout/': {
      id: '/_root-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RootLayoutIndexLazyImport
      parentRoute: typeof RootLayoutImport
    }
  }
}

// Create and export the route tree

interface RootLayoutRouteChildren {
  RootLayoutIndexLazyRoute: typeof RootLayoutIndexLazyRoute
}

const RootLayoutRouteChildren: RootLayoutRouteChildren = {
  RootLayoutIndexLazyRoute: RootLayoutIndexLazyRoute,
}

const RootLayoutRouteWithChildren = RootLayoutRoute._addFileChildren(
  RootLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof RootLayoutRouteWithChildren
  '/': typeof RootLayoutIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof RootLayoutIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_root-layout': typeof RootLayoutRouteWithChildren
  '/_root-layout/': typeof RootLayoutIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/'
  id: '__root__' | '/_root-layout' | '/_root-layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  RootLayoutRoute: typeof RootLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  RootLayoutRoute: RootLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_root-layout"
      ]
    },
    "/_root-layout": {
      "filePath": "_root-layout.tsx",
      "children": [
        "/_root-layout/"
      ]
    },
    "/_root-layout/": {
      "filePath": "_root-layout/index.lazy.tsx",
      "parent": "/_root-layout"
    }
  }
}
ROUTE_MANIFEST_END */
